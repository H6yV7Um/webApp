一、nginx的master-worker模式

nginx在启动后，会有一个master进程和多个worker进程。master进程主要用来管理worker进程

一、nginx进程模型，事件模型
1、nginx信号（只会发给master）
kill -HUP pid （重新nginx）: master进程接到信号后，会先重新加载配置文件，然后启动新的进程，并向所有老的进程发送信号，就不再接受新的请求
并且当老进程中处理完所有的请求后，退出。

2、worker进程之间，处理请求是平等的，因为每个worker进程都是从master进程fork过来，master事先建好了socket,每个worker进程可以accept这个socket，都会收到通知，而只有一个进程可以accept这个连接，通过accept_mutex共享锁控制只一点。

3、nginx采用了异步非阻塞的方式来处理请求
1个请求的过程：是一个读写事件
nginx处理大量的并发请求，线程只有一个，所以同时能处理的请求只有一个，只是在请求间进行不断地切换而已，切换是因为异步事件末准备好，主动让出,切换是没有任何代价。

二、nginx连接
1、nginx中connection就是对tcp连接的封装，其中包括连接的socket，读事件，写事件
nginx中的http请求的处理就是建立在connection之上，所以nginx不仅可以作为一个web服务器，可以作为邮件服务器。

2 nginx处理连接
nginx启动时，master进程会解析配置文件，得到需要监听的端口和ip地址，然后fork出多个work子进程出来,然后work会竞争accpet新的连接，
这时客户端可以向nginx发起连接。客户端与nginx进行三次握手，建立一个连接，建立好连接,进行读写事件，最后关闭连接

3 nginx作为客户端
nginx先获取一个ngx_connect_t结构体，然后创建socket，并设置socket，然后再通过添加读写事件，调用connect/read/write来调用连接。

4 nginx每个进程的连接数
通过设置worker_connections来设置每个进程可使用的连接最大值。
nignx能建立的最大连接数，应该是worker_connections * worker_processes。
当然对于http请求本地资源来说，能够支持的最大并发数是worker_connections * worker_processes。
如果是http作为反向代理来说，最大并发数量应该是worker_connection * worker_process / 2。
因为作为反向代理服务器，每个并发会建立与客户端的连接和与后端服务的连接，会占用两个连接。

三、nginx请求（request)
1、nginx中指的是http请求，数据结构是ngx_http_request_t。ngx_http_request_t是对一个http请求的封装。
一个http请求，包含请求行，请求头，请求体，响应行，响应头，响应体






