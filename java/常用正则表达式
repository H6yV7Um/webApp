
java 正则表达式包括了两个类，Pattern(模式类)和Matcher(匹配器类)。
Pattern类是用来表达和陈述所要搜索模式的对象，Matcher类是真正影响搜索的对象

1:匹配Jj开头,后续ava,(ness),[0-9]后续3个数字位的字符串
Matcher m = Pattern.compile("[Jj]ava(ness)[0-9]{3}").matcher("javaness111");

2:量词
X?      X，可以重复0次或1次
X*      X，可以重复0次或多次
X+      X，可以重复1次或多次

3:
\d 数字[0-9]
\D 非数字[^0-9]
\s 空白字符[\t\n\r\f\x0B]
\S 非空白字符
\w 单词字符[a-zA-Z0-9_]
\W 非单词字符

4: 管道
//(212) 555-1212， 212-555-1212和212 555 1212 电话号码匹配
Matcher seqMatcher = Pattern.compile("(\\(\\d{3}\\)|\\d{3})(-|\\s)?\\d{3}(-|\\s)?\\d{4}").matcher("(212) 555 1212");
(\\(\\d{3}\\)|\\d{3}) 表示二者匹配取其一

5: 以（非标示符）分隔字符串
Matcher seqMatcher = Pattern.compile("\\w+").matcher("hello world");

6: Groups
Group是指里用括号括起来的，能被后面的表达式调用的正则表达式。Group 0 表示整个表达式，group 1表示第一个被括起来的group，以此类推。所以；
A(B(C))D
里面有三个group：group 0是ABCD， group 1是BC，group 2是C。

7: start 和 end
表示匹配的开始和结束

8: 替换字符串中的所有数字
Matcher seqMatcher = Pattern.compile("\\d").matcher("abca12222");
if (seqMatcher.find()){
System.out.println(seqMatcher.group());

String r = seqMatcher.replaceFirst("R");
System.out.println(r);
}

