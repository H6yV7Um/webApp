一 算法时间复杂度
表示 T(n) = O(f(n))

1 常数阶 : O(1)
int sum = 0 ; n = 100; 执行一次
sum = (1+n)*n/2; 执行一次

2 线性阶 : O(n)
int i;
for(i = 0 ; i < n ; i++){

}

3 对数阶 : O(logN)
int count = 1 ;
while(count<n){
    count = count * 2;
}

4 平方阶 : O(n*n)
int i,j;
for(i = 0 ; i < n ; i++){
    for(j=0;j < n ; j++){

    }
}

5 N对数阶 : nlogn
for(i = 0 ; i < n ; i++){
    while(count<n){
        count = count * 2;
    }
}
时间复杂度
Ο(1)＜Ο(log2n)＜Ο(n)＜Ο(nlog2n)＜Ο(n*n)







