(1)hibernate有三种状态
    1、瞬时状态:
       新增new的对象，还没有调用save方法

    2、持久化状态：
       当执行完save方法后，此时user被session托管 (此处表示的是hibernate的1级缓存)
       在事务提交后，会保存到数据库中
       但是事务如果没有提交的话，就相当于没有执行sql语句，不会持久化到数据库
       如果在事务提交过程中，多次执行save，update等操作。会执行多次sql语句。

    3、游离态:数据库中有，但是session中不存在该对象。

(2)hibernate三种对象状态
   1、User user=new User()一个对象时,它表示创建一个瞬时对象；
      当调用save(user)方法，这个对象成为持久对象，直到事务提交，数据库连接关闭。在save方法后，事务提交前，user.set**()方法，也会保存，采取对数据更新操作。
      会执行1条insert 和 update 方法。

(3)各个操作
    1.瞬时态的实例可以通过调用save()、persist()或者saveOrUpdate()方法变成持久态
 　　2.游离态的实例可以通过调用 update()、saveOrUpdate()、lock()或者replicate()方法变成持久态
 　　3.save()和update()方法的区别在于前者是将瞬时态对象变成持久态，后者是将游离态对象变成持久态
 　　4.merge()方法可以完成save()和update()方法的功能，它的意图是将新的状态合并到已有的持久化对象上或创建新的持久化对象。
 　　5.lock()方法和update()方法的区别，update()方法是把一个已经更改过的脱管状态的对象变成持久态，
       lock()方法是把一个没有更改过的脱管状态的对象变成持久态
 　　6. persist()方法把一个瞬时态的实例持久化，但是并不保证标识符被立刻填入到持久化实例中，
       标识符的填入可能被推迟到flush的时间persist()方法保证当它在一个事务外部被调用的时候并不触发一个INSERT语句　　
 　　7.saveOrUpdate()方法则是判断对象是否已经存在，如若不存在，则将这个瞬时态对象变成持久态，如若存在，则将这个游离态对象持久化
 　　8.replicate()方法同样是将游离态对象持久化，不同的是，假设你的对象的ID是用hibernate 负责生成的，
                 但现在你想在数据库中插入一条已经指定ID的记录，这是就需要replicate()方法了




